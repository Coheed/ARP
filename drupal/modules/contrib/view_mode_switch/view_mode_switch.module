<?php

/**
 * @file
 * Provides a field type that allows editors to switch view modes.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\FieldableEntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\view_mode_switch\Hook\FieldTypeCategoryInfoAlterHook;

/**
 * Implements hook_ENTITY_TYPE_predelete().
 */
function view_mode_switch_entity_view_mode_predelete(EntityInterface $entity): void {
  /** @var \Drupal\Core\Entity\EntityViewModeInterface $entity */
  /** @var \Drupal\view_mode_switch\ViewModeHelperInterface $view_mode_helper */
  $view_mode_helper = \Drupal::service('view_mode_switch.view_mode_helper');

  // Remove view mode from field storage configurations.
  $view_mode_helper->preDelete($entity);
}

/**
 * Implements hook_entity_view_mode_alter().
 */
function view_mode_switch_entity_view_mode_alter(string &$view_mode, EntityInterface $entity): void {
  // Is fieldable entity?
  if ($entity instanceof FieldableEntityInterface) {
    /** @var \Drupal\view_mode_switch\ViewModeSwitchInterface $view_mode_switch */
    $view_mode_switch = \Drupal::service('view_mode_switch');

    // Switch view mode (if applicable).
    if (($switch_to_view_mode = $view_mode_switch->getViewModeToSwitchTo($entity, $view_mode))) {
      $view_mode = $switch_to_view_mode;
    }
  }
}

/**
 * Implements hook_field_type_category_info_alter().
 */
function view_mode_switch_field_type_category_info_alter(array &$categories): void {
  $hook = \Drupal::classResolver(FieldTypeCategoryInfoAlterHook::class);
  assert($hook instanceof FieldTypeCategoryInfoAlterHook);

  $hook->fieldTypeCategoryInfoAlter($categories);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function view_mode_switch_form_entity_view_mode_confirm_form_alter(array &$form, FormStateInterface $form_state, string $form_id): void {
  /** @var \Drupal\view_mode_switch\Entity\EntityViewModeDeleteFormHelperInterface $entity_view_mode_delete_form_helper */
  $entity_view_mode_delete_form_helper = \Drupal::service('view_mode_switch.entity_view_mode_delete_form_helper');

  // Add potentially updated field storage configurations to update list.
  $entity_view_mode_delete_form_helper->alter($form, $form_state);
}
