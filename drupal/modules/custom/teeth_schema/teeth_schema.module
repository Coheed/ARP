<?php

/**
 * Implements hook_theme().
 */
function my_teeth_schema_theme() {
  return [
    'teeth_schema' => [
      'variables' => ['teeth_data' => []],
      'template' => 'teeth-schema',
    ],
  ];
}

/**
 * Custom render function for teeth schema.
 */
function my_teeth_schema_render($node) {
  $teeth_data = my_teeth_schema_collect_teeth_data($node);
  return [
    '#theme' => 'teeth_schema',
    '#teeth_data' => $teeth_data,
  ];
}

/**
 * Collects data from the node for rendering the teeth schema.
 */
function my_teeth_schema_collect_teeth_data($node) {
  $teeth = [];
  foreach ($node->get('field_teeth_section') as $item) {
    $zahn_nr = $item->field_zahn_number->value;
    $teeth[$zahn_nr] = [
      'plan_r' => $item->field_plan_r->value,
      'plan_t' => $item->field_plan_t->value,
      'befund' => $item->field_befund->value,
    ];
  }
  return $teeth;
}






function build_abrechnungstabelle($paragraphs) {
  $positions = [];
  $sum = 0;

  foreach ($paragraphs as $paragraph) {
    $position = new stdClass();

    // Datum
    if ($paragraph->hasField('field_datum') && !$paragraph->get('field_datum')->isEmpty()) {
      $position->date = $paragraph->get('field_datum')->value;
    } else {
      $position->date = '';
    }

    // Zahn
    if ($paragraph->hasField('field_zahn_calc') && !$paragraph->get('field_zahn_calc')->isEmpty()) {
      $position->zahn = $paragraph->get('field_zahn_calc')->value;
    } else {
      $position->zahn = '';
    }

    // Geb-Nr (Referenziertes Element laden)
    if ($paragraph->hasField('field_geb_nr') && !$paragraph->get('field_geb_nr')->isEmpty()) {
      $ref_node = $paragraph->get('field_geb_nr')->entity;
      if ($ref_node && $ref_node->bundle() == 'bema_leistung') {
        $position->geb_nr = 'BEMA<br>' . $ref_node->get('field_bema_nr')->value;
      } elseif ($ref_node && $ref_node->bundle() == 'goz_leistung') {
        $position->geb_nr = 'GOZ<br>' . $ref_node->get('field_gebuehrenziffer')->value;
      } else {
        $position->geb_nr = 'N/A';
      }
    } else {
      $position->geb_nr = 'N/A';
    }

    // Leistung
    if ($paragraph->hasField('field_leistung_calc') && !$paragraph->get('field_leistung_calc')->isEmpty()) {
      $position->text = $paragraph->get('field_leistung_calc')->value;
    } else {
      $position->text = 'N/A';
    }

    // Anzahl
    if ($paragraph->hasField('field_anzahl') && !$paragraph->get('field_anzahl')->isEmpty()) {
      $position->num = $paragraph->get('field_anzahl')->value;
    } else {
      $position->num = 1; // Standardwert, wenn keine Anzahl angegeben
    }

    // Faktor
    if ($paragraph->hasField('field_faktor') && !$paragraph->get('field_faktor')->isEmpty()) {
      $position->factor = $paragraph->get('field_faktor')->value;
    } else {
      $position->factor = 'N/A';
    }

    // Betrag
    if ($paragraph->hasField('field_betrag') && !$paragraph->get('field_betrag')->isEmpty()) {
      $position->amount = $paragraph->get('field_betrag')->value . 'â‚¬';
    } else {
      $position->amount = 'N/A';
    }

    $positions[] = $position;
  }

  return ['positions' => $positions, 'sum' => $sum];
}
